// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @db.Uuid
  email     String     @unique @db.VarChar(255)
  password  String     @db.VarChar(255)
  nickname  String     @db.VarChar(20)
  phone     String     @db.VarChar(11)
  address   String     @db.VarChar(255)
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt DateTime   @updatedAt @map("updated_at") @db.Timestamptz(0)
  bookmarks Bookmark[]
  Order     Order[]
  Cart      Cart[]
  Review    Review[]

  @@index([createdAt])
  @@map("user")
}

model Store {
  id        String     @id @db.Uuid
  email     String     @unique @db.VarChar(255)
  password  String     @db.VarChar(255)
  name      String     @db.VarChar(50)
  telephone String     @db.VarChar(11)
  address   String     @db.VarChar(255)
  openHour  DateTime   @map("open_hour") @db.Time()
  closeHour DateTime   @map("close_hour") @db.Time()
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt DateTime   @updatedAt @map("updated_at") @db.Timestamptz(0)
  bookmarks Bookmark[]
  Product   Product[]
  Order     Order[]
  Review    Review[]

  @@index([createdAt])
  @@map("store")
}

model Bookmark {
  id        String   @id @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id") @db.Uuid
  Store     Store    @relation(fields: [storeId], references: [id])
  storeId   String   @map("store_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)

  @@unique([storeId, userId])
  @@index([createdAt])
  @@map("bookmark")
}

model Product {
  id          String       @id @db.Uuid
  name        String       @db.VarChar(50)
  price       Int          @db.Integer
  inStock     Boolean      @default(true) @map("in_stock")
  description String       @db.VarChar(255)
  image       String       @db.VarChar(1000)
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt   DateTime     @updatedAt @map("updated_at") @db.Timestamptz(0)
  store       Store        @relation(fields: [storeId], references: [id])
  storeId     String       @map("store_id") @db.Uuid
  Cart        Cart[]
  OrderSheet  OrderSheet[]

  @@index([createdAt])
  @@map("product")
}

model Order {
  id                  String       @id @db.Uuid
  paymentType         String       @map("payment_type") @db.VarChar(50)
  status              String       @db.VarChar(50)
  paymentStatus       String       @map("payment_status") @db.VarChar(50)
  paidAt              DateTime     @map("paid_at") @db.Timestamptz(0)
  receptedOrderAt     DateTime?    @map("recepted_order_at") @db.Timestamptz(0)
  confirmedOrderAt    DateTime?    @map("confirmed_order_at") @db.Timestamptz(0)
  canceledOrderAt     DateTime?    @map("canceled_order_at") @db.Timestamptz(0)
  deliveryStartedAt   DateTime?    @map("delivery_started_at") @db.Timestamptz(0)
  deliveryCompletedAt DateTime?    @map("delivery_completed_at") @db.Timestamptz(0)
  createdAt           DateTime     @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt           DateTime     @updatedAt @map("updated_at") @db.Timestamptz(0)
  user                User         @relation(fields: [userId], references: [id])
  userId              String       @map("user_id") @db.Uuid
  store               Store        @relation(fields: [storeId], references: [id])
  storeId             String       @map("store_id") @db.Uuid
  OrderSheet          OrderSheet[]

  @@index([createdAt])
  @@map("order")
}

model Cart {
  id        String   @id @db.Uuid
  amount    Int      @db.Integer
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id") @db.Uuid
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @map("product_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)

  @@index([createdAt])
  @@map("cart")
}

model Review {
  id        String   @id @db.Uuid
  images    String[] @db.VarChar(1000)
  content   String   @db.VarChar(255)
  comment   String   @db.VarChar(255)
  star      String   @db.VarChar()
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(0)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id") @db.Uuid
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   String   @map("store_id") @db.Uuid

  @@index([createdAt])
  @@map("review")
}

model OrderSheet {
  id        String   @id @db.Uuid
  amount    Int      @db.Integer
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(0)
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @map("order_id") @db.Uuid
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @map("product_id") @db.Uuid

  @@index([createdAt])
  @@map("order_sheet")
}
